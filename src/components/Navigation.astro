---
import { FiCode } from "react-icons/fi";
import { colors, customClasses } from "../utils/colors";

export interface Props {
  lang: "es" | "en";
}

const { lang } = Astro.props;
const currentPath = Astro.url.pathname;
const isSpanish = currentPath === "/es" || currentPath === "/es/";
const switchUrl = isSpanish ? "/" : "/es";
const baseUrl = isSpanish ? "/es" : "";
---

<nav
  class="bg-white bg-opacity-80 backdrop-blur-md shadow-sm fixed w-full top-0 z-50 transition-all duration-300"
  id="main-nav"
  role="navigation"
  aria-label={lang === "es" ? "Navegación principal" : "Main navigation"}>
  <div class="max-w-6xl mx-auto px-4">
    <div class="flex justify-between items-center h-16">
      <!-- Logo y nombre -->
      <div class="flex items-center space-x-2 relative">
        <a href={baseUrl || "/"} class="flex items-center space-x-2 relative" id="logo-link">
          <!-- Logo icon -->
          <div
            id="nav-logo"
            class={`w-10 h-10 flex items-center justify-center opacity-100 scale-100 transition-all duration-700 ease-out ${colors.text.primary} z-10`}>
            <FiCode size={28} />
          </div>

          <!-- Avatar (aparece al hacer scroll) -->
          <div
            id="nav-avatar"
            class={`w-10 h-10 ${colors.gradients.avatar} rounded-full flex items-center justify-center ${colors.text.white} text-sm font-bold opacity-0 scale-75 transition-all duration-500 ease-out absolute left-0`}>
            AQ
          </div>

          <!-- Nombre y título (aparece al hacer scroll) -->
          <div
            class="flex flex-col opacity-0 transition-all duration-600 ease-out transform translate-x-[-20px] ml-2"
            id="nav-name-container">
            <span
              id="nav-title"
              class={`text-lg font-bold ${colors.text.primary} transition-all duration-500`}>
              Ángel Quiroz
            </span>
            <span
              id="nav-subtitle"
              class={`text-xs ${colors.text.muted} transition-all duration-500 transform translate-y-2`}>
              {lang === "es" ? "Ingeniero de Software" : "Software Engineer"}
            </span>
          </div>
        </a>
      </div>

      <!-- Navigation Links Desktop -->
      <div class="hidden md:flex items-center space-x-1 relative">
        <a href={`${baseUrl}#about`} class="nav-link px-4 py-2 text-gray-700 hover:text-blue-600 transition-all duration-300 rounded-lg relative z-10" data-section="about">
          {lang === "es" ? "Acerca de" : "About"}
        </a>
        <a href={`${baseUrl}#experience`} class="nav-link px-4 py-2 text-gray-700 hover:text-blue-600 transition-all duration-300 rounded-lg relative z-10" data-section="experience">
          {lang === "es" ? "Experiencia" : "Experience"}
        </a>
        <a href={`${baseUrl}#skills`} class="nav-link px-4 py-2 text-gray-700 hover:text-blue-600 transition-all duration-300 rounded-lg relative z-10" data-section="skills">
          {lang === "es" ? "Aptitudes" : "Skills"}
        </a>
        <a href={`${baseUrl}#projects`} class="nav-link px-4 py-2 text-gray-700 hover:text-blue-600 transition-all duration-300 rounded-lg relative z-10" data-section="projects">
          {lang === "es" ? "Proyectos" : "Projects"}
        </a>
        <a href={`${baseUrl}#contact`} class="nav-link px-4 py-2 text-gray-700 hover:text-blue-600 transition-all duration-300 rounded-lg relative z-10" data-section="contact">
          {lang === "es" ? "Contacto" : "Contact"}
        </a>

        <!-- Language Switch -->
        <a
          href={switchUrl}
          class={`ml-4 ${colors.bg.primary} ${colors.text.white} px-3 py-1 rounded-md text-sm ${colors.hover.primaryBg} transition-colors`}>
          {lang === "es" ? "EN" : "ES"}
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button id="mobile-menu-button" class={`${customClasses.navLink} p-2`}>
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div id="mobile-menu" class="hidden md:hidden pb-4">
      <div class="space-y-2">
        <a href={`${baseUrl}#about`} class="mobile-nav-link block px-3 py-2 text-gray-700 hover:text-blue-600 transition-colors duration-300" data-section="about">
          {lang === "es" ? "Acerca de" : "About"}
        </a>
        <a href={`${baseUrl}#experience`} class="mobile-nav-link block px-3 py-2 text-gray-700 hover:text-blue-600 transition-colors duration-300" data-section="experience">
          {lang === "es" ? "Experiencia" : "Experience"}
        </a>
        <a href={`${baseUrl}#skills`} class="mobile-nav-link block px-3 py-2 text-gray-700 hover:text-blue-600 transition-colors duration-300" data-section="skills">
          {lang === "es" ? "Aptitudes" : "Skills"}
        </a>
        <a href={`${baseUrl}#projects`} class="mobile-nav-link block px-3 py-2 text-gray-700 hover:text-blue-600 transition-colors duration-300" data-section="projects">
          {lang === "es" ? "Proyectos" : "Projects"}
        </a>
        <a href={`${baseUrl}#contact`} class="mobile-nav-link block px-3 py-2 text-gray-700 hover:text-blue-600 transition-colors duration-300" data-section="contact">
          {lang === "es" ? "Contacto" : "Contact"}
        </a>
        <a href={switchUrl} class={`block ${colors.bg.primary} ${colors.text.white} px-3 py-2 rounded-md text-sm ${colors.hover.primaryBg} transition-colors w-fit mt-4`}>
          {lang === "es" ? "EN" : "ES"}
        </a>
      </div>
    </div>
  </div>

</nav>

<script>
  // Variables globales
  let currentActiveSection = '';
  let isScrolling = false;

  // Función para detectar la sección activa
  function detectActiveSection() {
    const sections = ['about', 'experience', 'skills', 'projects', 'contact'];
    const scrollPosition = window.scrollY + 100; // Offset más simple
    
    let activeSection = '';
    
    // Si estamos en la parte superior, no hay sección activa
    if (window.scrollY < window.innerHeight * 0.15) {
      activeSection = '';
    } else {
      // Buscar la sección activa - de atrás hacia adelante para dar prioridad a la última visible
      for (let i = sections.length - 1; i >= 0; i--) {
        const sectionId = sections[i];
        const element = document.getElementById(sectionId);
        if (element) {
          const rect = element.getBoundingClientRect();
          const elementTop = rect.top + window.scrollY;
          
          // Si el top de la sección está por encima o en el punto de scroll
          if (scrollPosition >= elementTop - 50) { // 50px de margen
            activeSection = sectionId;
            break;
          }
        }
      }
    }
    
    // Solo actualizar si cambió
    if (activeSection !== currentActiveSection) {
      currentActiveSection = activeSection;
      updateActiveIndicator();
    }
  }

  // Función para actualizar el indicador visual
  function updateActiveIndicator() {
    const navLinks = document.querySelectorAll('.nav-link');
    const mobileNavLinks = document.querySelectorAll('.mobile-nav-link');
    
    // Resetear todos los enlaces (desktop y móvil)
    [...navLinks, ...mobileNavLinks].forEach(link => {
      link.classList.remove('text-blue-600', 'font-semibold');
      link.classList.add('text-gray-700');
    });
    
    // Si no hay sección activa, no hacer nada más
    if (!currentActiveSection) {
      return;
    }
    
    // Actualizar estilo del enlace activo (desktop y móvil)
    const allActiveLinks = document.querySelectorAll(`[data-section="${currentActiveSection}"]`);
    allActiveLinks.forEach(link => {
      link.classList.remove('text-gray-700');
      link.classList.add('text-blue-600', 'font-semibold');
    });
  }

  // Función para manejar el scroll del navbar (logo animation)
  function handleNavbarScroll() {
    const scrollY = window.scrollY;
    const nav = document.getElementById("main-nav");
    const navLogo = document.getElementById("nav-logo");
    const navAvatar = document.getElementById("nav-avatar");
    const navNameContainer = document.getElementById("nav-name-container");
    const navSubtitle = document.getElementById("nav-subtitle");

    const triggerPoint = window.innerHeight * 0.3;

    if (scrollY > triggerPoint) {
      // Mostrar elementos de navegación
      nav?.classList.add("nav-scrolled");
      navLogo?.classList.add("translate-x-[180px]");
      navAvatar?.classList.remove("opacity-0", "scale-75");
      navAvatar?.classList.add("opacity-100", "scale-100");
      navNameContainer?.classList.remove("opacity-0", "translate-x-[-20px]");
      navNameContainer?.classList.add("opacity-100", "translate-x-0");
      navSubtitle?.classList.remove("translate-y-2");
      navSubtitle?.classList.add("translate-y-0");
    } else {
      // Ocultar elementos de navegación
      nav?.classList.remove("nav-scrolled");
      navLogo?.classList.remove("translate-x-[180px]");
      navAvatar?.classList.remove("opacity-100", "scale-100");
      navAvatar?.classList.add("opacity-0", "scale-75");
      navNameContainer?.classList.remove("opacity-100", "translate-x-0");
      navNameContainer?.classList.add("opacity-0", "translate-x-[-20px]");
      navSubtitle?.classList.remove("translate-y-0");
      navSubtitle?.classList.add("translate-y-2");
    }
  }

  // Función principal de scroll
  function handleScroll() {
    if (!isScrolling) {
      window.requestAnimationFrame(() => {
        handleNavbarScroll();
        detectActiveSection();
        isScrolling = false;
      });
      isScrolling = true;
    }
  }

  // Smooth scroll para enlaces
  function initSmoothScroll() {
    // Logo link
    const logoLink = document.getElementById('logo-link');
    logoLink?.addEventListener('click', function(e) {
      e.preventDefault();
      window.scrollTo({ top: 0, behavior: 'smooth' });
      history.pushState(null, '', logoLink.getAttribute('href') || '/');
      setTimeout(() => detectActiveSection(), 100);
    });

    // Navigation links
    const navLinks = document.querySelectorAll('[data-section]');
    navLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        const target = e.currentTarget as HTMLAnchorElement;
        const targetId = target.getAttribute('data-section');
        
        if (targetId) {
          const targetElement = document.getElementById(targetId);
          
          if (targetElement) {
            // Cerrar menu móvil
            const mobileMenu = document.getElementById("mobile-menu");
            mobileMenu?.classList.add("hidden");
            
            // Calcular posición
            const navHeight = document.getElementById("main-nav")?.offsetHeight || 64;
            const targetPosition = targetElement.offsetTop - navHeight;
            
            // Scroll suave
            window.scrollTo({ top: targetPosition, behavior: 'smooth' });
            
            // Actualizar URL
            const href = target.getAttribute('href');
            if (href) {
              history.pushState(null, '', href);
            }
            
            // Actualizar indicador inmediatamente
            currentActiveSection = targetId;
            updateActiveIndicator();
          }
        }
      });
    });
  }

  // Mobile menu toggle
  function initMobileMenu() {
    const button = document.getElementById("mobile-menu-button");
    const menu = document.getElementById("mobile-menu");
    
    button?.addEventListener("click", () => {
      menu?.classList.toggle("hidden");
    });
  }

  // Inicializar cuando el DOM esté listo
  function init() {
    initSmoothScroll();
    initMobileMenu();
    
    // Si hay hash en la URL, activar esa sección
    const hash = window.location.hash.substring(1);
    if (hash) {
      currentActiveSection = hash;
      setTimeout(() => updateActiveIndicator(), 100);
    }
    
    // Detectar sección inicial
    setTimeout(() => {
      detectActiveSection();
      handleNavbarScroll();
    }, 100);
  }

  // Event listeners
  document.addEventListener('DOMContentLoaded', init);
  window.addEventListener('scroll', handleScroll, { passive: true });
  window.addEventListener('resize', () => {
    setTimeout(() => {
      updateActiveIndicator();
    }, 150);
  }, { passive: true });

  // Inicializar inmediatamente también
  init();
</script>

<style>
  .nav-scrolled {
    background-color: rgba(255, 255, 255, 0.95);
    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
  }

  /* Transiciones suaves para elementos del nav */
  #nav-logo,
  #nav-avatar,
  #nav-title,
  #nav-subtitle,
  #nav-name-container {
    transition: all 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94);
  }

  /* Enlaces de navegación */
  .nav-link {
    transition: all 0.3s ease;
  }

  .nav-link:hover {
    transform: translateY(-1px);
  }

  .nav-link.text-blue-600 {
    text-shadow: 0 0 8px rgba(59, 130, 246, 0.3);
  }

  /* Mobile */
  @media (max-width: 768px) {
    .mobile-nav-link.text-blue-600 {
      background-color: rgba(59, 130, 246, 0.1);
      border-radius: 0.5rem;
    }
  }
</style>
