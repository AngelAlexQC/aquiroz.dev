---
import { FiCode } from "react-icons/fi";
import { colors, customClasses } from "../utils/colors";

export interface Props {
  lang: "es" | "en";
}

const { lang } = Astro.props;
const currentPath = Astro.url.pathname;
const isSpanish = currentPath === "/es" || currentPath === "/es/";
const switchUrl = isSpanish ? "/" : "/es";
const baseUrl = isSpanish ? "/es" : "";
---

<nav
  class="bg-white bg-opacity-80 backdrop-blur-md shadow-sm fixed w-full top-0 z-50 transition-all duration-300"
  id="main-nav">
  <div class="max-w-6xl mx-auto px-4">
    <div class="flex justify-between items-center h-16">
      <div class="flex items-center space-x-2 relative">
        <!-- Logo icon - always visible, moves smoothly to the right -->
        <div
          id="nav-logo"
          class={`w-10 h-10 flex items-center justify-center opacity-100 scale-100 transition-all duration-700 ease-out transform ${colors.text.primary} z-10`}>
          <FiCode size={28} />
        </div>

        <!-- Avatar in navbar (initially hidden, appears in logo's original position) -->
        <div
          id="nav-avatar"
          class={`w-10 h-10 ${colors.gradients.avatar} rounded-full flex items-center justify-center ${colors.text.white} text-sm font-bold opacity-0 scale-75 transition-all duration-500 ease-out transform absolute left-0`}>
          AQ
        </div>

        <!-- Name/Title in navbar (appears after avatar) -->
        <div
          class="flex flex-col opacity-0 transition-all duration-600 ease-out transform translate-x-[-20px] ml-2"
          id="nav-name-container">
          <a
            href={baseUrl || "/"}
            id="nav-title"
            class={`text-lg font-bold ${colors.text.primary} transition-all duration-500 transform origin-left`}>
            √Ångel Quiroz
          </a>
          <span
            id="nav-subtitle"
            class={`text-xs ${colors.text.muted} transition-all duration-500 transform translate-y-2`}>
            {lang === "es" ? "Ingeniero de Software" : "Software Engineer"}
          </span>
        </div>
      </div>

      <div class="hidden md:flex items-center space-x-4">
        <a href={`${baseUrl}#about`} class={customClasses.navLink}>
          {lang === "es" ? "Acerca de" : "About"}
        </a>
        <a href={`${baseUrl}#experience`} class={customClasses.navLink}>
          {lang === "es" ? "Experiencia" : "Experience"}
        </a>
        <a href={`${baseUrl}#skills`} class={customClasses.navLink}>
          {lang === "es" ? "Aptitudes" : "Skills"}
        </a>
        <a href={`${baseUrl}#projects`} class={customClasses.navLink}>
          {lang === "es" ? "Proyectos" : "Projects"}
        </a>
        <a href={`${baseUrl}#contact`} class={customClasses.navLink}>
          {lang === "es" ? "Contacto" : "Contact"}
        </a>

        <a
          href={switchUrl}
          class={`${colors.bg.primary} ${colors.text.white} px-3 py-1 rounded-md text-sm ${colors.hover.primaryBg} transition-colors`}>
          {lang === "es" ? "EN" : "ES"}
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button id="mobile-menu-button" class={customClasses.navLink}>
          <svg
            class="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div id="mobile-menu" class="hidden md:hidden pb-4">
      <div class="space-y-2">
        <a
          href={`/${lang}/#about`}
          class={`block ${customClasses.navLink} py-2`}>
          {lang === "es" ? "Acerca de" : "About"}
        </a>
        <a
          href={`/${lang}/#experience`}
          class={`block ${customClasses.navLink} py-2`}>
          {lang === "es" ? "Experiencia" : "Experience"}
        </a>
        <a
          href={`/${lang}/#skills`}
          class={`block ${customClasses.navLink} py-2`}>
          {lang === "es" ? "Aptitudes" : "Skills"}
        </a>
        <a
          href={`/${lang}/#projects`}
          class={`block ${customClasses.navLink} py-2`}>
          {lang === "es" ? "Proyectos" : "Projects"}
        </a>
        <a
          href={`/${lang}/#contact`}
          class={`block ${customClasses.navLink} py-2`}>
          {lang === "es" ? "Contacto" : "Contact"}
        </a>
        <a
          href={switchUrl}
          class={`block ${colors.bg.primary} ${colors.text.white} px-3 py-2 rounded-md text-sm ${colors.hover.primaryBg} transition-colors w-fit`}>
          {lang === "es" ? "EN" : "ES"}
        </a>
      </div>
    </div>
  </div>

  <script>
    // Mobile menu toggle
    document
      .getElementById("mobile-menu-button")
      ?.addEventListener("click", () => {
        const menu = document.getElementById("mobile-menu");
        menu?.classList.toggle("hidden");
      });

    // Scroll-triggered navigation transformation
    let lastScrollY = 0;
    let ticking = false;

    function updateNavigation() {
      const currentScrollY = window.scrollY;
      const nav = document.getElementById("main-nav");
      const navLogo = document.getElementById("nav-logo");
      const navAvatar = document.getElementById("nav-avatar");
      const navTitle = document.getElementById("nav-title");
      const navSubtitle = document.getElementById("nav-subtitle");
      const navNameContainer = document.getElementById("nav-name-container");

      // Trigger point - when user scrolls past the hero section
      const triggerPoint = window.innerHeight * 0.3; // 30% of viewport height

      if (currentScrollY > triggerPoint) {
        // Show navigation elements with smooth animations
        nav?.classList.add("nav-scrolled");

        // Move logo smoothly to the right (approximately 180px to make space for avatar + name)
        navLogo?.classList.add("translate-x-[180px]");

        // Show avatar in logo's original position
        navAvatar?.classList.remove("opacity-0", "scale-75");
        navAvatar?.classList.add("opacity-100", "scale-100");

        // Show name container
        navNameContainer?.classList.remove("opacity-0", "translate-x-[-20px]");
        navNameContainer?.classList.add("opacity-100", "translate-x-0");

        // Show subtitle
        navSubtitle?.classList.remove("translate-y-2");
        navSubtitle?.classList.add("translate-y-0");
      } else {
        // Hide navigation elements and return logo to original position
        nav?.classList.remove("nav-scrolled");

        // Move logo back to original position
        navLogo?.classList.remove("translate-x-[180px]");

        // Hide avatar
        navAvatar?.classList.remove("opacity-100", "scale-100");
        navAvatar?.classList.add("opacity-0", "scale-75");

        // Hide name container
        navNameContainer?.classList.remove("opacity-100", "translate-x-0");
        navNameContainer?.classList.add("opacity-0", "translate-x-[-20px]");

        // Hide subtitle
        navSubtitle?.classList.remove("translate-y-0");
        navSubtitle?.classList.add("translate-y-2");
      }

      lastScrollY = currentScrollY;
      ticking = false;
    }

    function requestTick() {
      if (!ticking) {
        requestAnimationFrame(updateNavigation);
        ticking = true;
      }
    }

    // Listen for scroll events
    window.addEventListener("scroll", requestTick, { passive: true });

    // Initial check
    updateNavigation();
  </script>

  <style>
    .nav-scrolled {
      background-color: rgba(255, 255, 255, 0.95);
      box-shadow:
        0 10px 15px -3px rgba(0, 0, 0, 0.1),
        0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }

    /* Smooth transitions for all nav elements */
    #nav-logo,
    #nav-avatar,
    #nav-title,
    #nav-subtitle,
    #nav-name-container {
      transition: all 0.7s cubic-bezier(0.25, 0.46, 0.45, 0.94);
    }

    /* Logo hover effect */
    #nav-logo:hover {
      transform: scale(1.1) rotate(5deg);
    }

    /* Preserve hover effect when logo is translated */
    #nav-logo.translate-x-\[180px\]:hover {
      transform: translateX(180px) scale(1.1) rotate(5deg);
    }
  </style>
</nav>
