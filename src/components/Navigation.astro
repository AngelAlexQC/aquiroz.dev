---
import { FiCode } from 'react-icons/fi';

export interface Props {
  lang: "es" | "en";
}

const { lang } = Astro.props;
const currentPath = Astro.url.pathname;
const isSpanish = currentPath === "/es" || currentPath === "/es/";
const switchUrl = isSpanish ? "/" : "/es";
const baseUrl = isSpanish ? "/es" : "";
---

<nav
  class="bg-white bg-opacity-80 backdrop-blur-md shadow-sm fixed w-full top-0 z-50 transition-all duration-300"
  id="main-nav">
  <div class="max-w-6xl mx-auto px-4">
    <div class="flex justify-between items-center h-16">
      <div class="flex items-center space-x-3">
        <!-- Logo icon - always visible, moves to right when name appears -->
        <div
          id="nav-logo"
          class="w-10 h-10 flex items-center justify-center opacity-100 scale-100 transition-all duration-500 transform text-blue-600 order-1">
          <FiCode size={28} />
        </div>
        
        <!-- Avatar in navbar (initially hidden) -->
        <div
          id="nav-avatar"
          class="w-10 h-10 bg-gradient-to-r from-blue-600 via-purple-600 to-indigo-700 rounded-full flex items-center justify-center text-white text-sm font-bold opacity-0 scale-75 transition-all duration-500 transform order-2">
          AQ
        </div>

        <!-- Name/Title in navbar -->
        <div class="flex flex-col order-3">
          <a
            href={baseUrl || "/"}
            id="nav-title"
            class="text-lg font-bold text-blue-600 opacity-0 scale-95 transition-all duration-500 transform origin-left">
            √Ångel Quiroz
          </a>
          <span
            id="nav-subtitle"
            class="text-xs text-gray-500 opacity-0 transition-all duration-500 transform translate-y-2">
            {lang === "es" ? "Ingeniero de Software" : "Software Engineer"}
          </span>
        </div>
      </div>

      <div class="hidden md:flex items-center space-x-8">
        <a
          href={`${baseUrl}#about`}
          class="text-gray-700 hover:text-blue-600 transition-colors">
          {lang === "es" ? "Acerca de" : "About"}
        </a>
        <a
          href={`${baseUrl}#experience`}
          class="text-gray-700 hover:text-blue-600 transition-colors">
          {lang === "es" ? "Experiencia" : "Experience"}
        </a>
        <a
          href={`${baseUrl}#skills`}
          class="text-gray-700 hover:text-blue-600 transition-colors">
          {lang === "es" ? "Aptitudes" : "Skills"}
        </a>
        <a
          href={`${baseUrl}#projects`}
          class="text-gray-700 hover:text-blue-600 transition-colors">
          {lang === "es" ? "Proyectos" : "Projects"}
        </a>
        <a
          href={`${baseUrl}#contact`}
          class="text-gray-700 hover:text-blue-600 transition-colors">
          {lang === "es" ? "Contacto" : "Contact"}
        </a>

        <a
          href={switchUrl}
          class="bg-blue-600 text-white px-3 py-1 rounded-md text-sm hover:bg-blue-700 transition-colors">
          {lang === "es" ? "EN" : "ES"}
        </a>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          id="mobile-menu-button"
          class="text-gray-700 hover:text-blue-600">
          <svg
            class="w-6 h-6"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24">
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M4 6h16M4 12h16M4 18h16"></path>
          </svg>
        </button>
      </div>
    </div>

    <!-- Mobile menu -->
    <div id="mobile-menu" class="hidden md:hidden pb-4">
      <div class="space-y-2">
        <a
          href={`/${lang}/#about`}
          class="block text-gray-700 hover:text-blue-600 py-2">
          {lang === "es" ? "Acerca de" : "About"}
        </a>
        <a
          href={`/${lang}/#experience`}
          class="block text-gray-700 hover:text-blue-600 py-2">
          {lang === "es" ? "Experiencia" : "Experience"}
        </a>
        <a
          href={`/${lang}/#skills`}
          class="block text-gray-700 hover:text-blue-600 py-2">
          {lang === "es" ? "Aptitudes" : "Skills"}
        </a>
        <a
          href={`/${lang}/#projects`}
          class="block text-gray-700 hover:text-blue-600 py-2">
          {lang === "es" ? "Proyectos" : "Projects"}
        </a>
        <a
          href={`/${lang}/#contact`}
          class="block text-gray-700 hover:text-blue-600 py-2">
          {lang === "es" ? "Contacto" : "Contact"}
        </a>
        <a
          href={switchUrl}
          class="block bg-blue-600 text-white px-3 py-2 rounded-md text-sm hover:bg-blue-700 transition-colors w-fit">
          {lang === "es" ? "EN" : "ES"}
        </a>
      </div>
    </div>
  </div>

  <script>
    // Mobile menu toggle
    document
      .getElementById("mobile-menu-button")
      ?.addEventListener("click", () => {
        const menu = document.getElementById("mobile-menu");
        menu?.classList.toggle("hidden");
      });

    // Scroll-triggered navigation transformation
    let lastScrollY = 0;
    let ticking = false;

    function updateNavigation() {
      const currentScrollY = window.scrollY;
      const nav = document.getElementById("main-nav");
      const navLogo = document.getElementById("nav-logo");
      const navAvatar = document.getElementById("nav-avatar");
      const navTitle = document.getElementById("nav-title");
      const navSubtitle = document.getElementById("nav-subtitle");

      // Trigger point - when user scrolls past the hero section
      const triggerPoint = window.innerHeight * 0.3; // 30% of viewport height

      if (currentScrollY > triggerPoint) {
        // Show navigation elements
        nav?.classList.add("nav-scrolled");
        
        // Move logo to the end (after name)
        navLogo?.classList.remove("order-1");
        navLogo?.classList.add("order-4");
        
        navAvatar?.classList.remove("opacity-0", "scale-75");
        navAvatar?.classList.add("opacity-100", "scale-100");

        navTitle?.classList.remove("opacity-0", "scale-95");
        navTitle?.classList.add("opacity-100", "scale-100");

        navSubtitle?.classList.remove("opacity-0", "translate-y-2");
        navSubtitle?.classList.add("opacity-100", "translate-y-0");
      } else {
        // Hide navigation elements, logo returns to first position
        nav?.classList.remove("nav-scrolled");
        
        // Move logo back to beginning
        navLogo?.classList.remove("order-4");
        navLogo?.classList.add("order-1");
        
        navAvatar?.classList.remove("opacity-100", "scale-100");
        navAvatar?.classList.add("opacity-0", "scale-75");

        navTitle?.classList.remove("opacity-100", "scale-100");
        navTitle?.classList.add("opacity-0", "scale-95");

        navSubtitle?.classList.remove("opacity-100", "translate-y-0");
        navSubtitle?.classList.add("opacity-0", "translate-y-2");
      }

      lastScrollY = currentScrollY;
      ticking = false;
    }

    function requestTick() {
      if (!ticking) {
        requestAnimationFrame(updateNavigation);
        ticking = true;
      }
    }

    // Listen for scroll events
    window.addEventListener("scroll", requestTick, { passive: true });

    // Initial check
    updateNavigation();
  </script>

  <style>
    .nav-scrolled {
      background-color: rgba(255, 255, 255, 0.95);
      box-shadow:
        0 10px 15px -3px rgba(0, 0, 0, 0.1),
        0 4px 6px -2px rgba(0, 0, 0, 0.05);
    }

    /* Smooth transitions for all nav elements */
    #nav-logo,
    #nav-avatar,
    #nav-title,
    #nav-subtitle {
      transition: all 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    }
    
    /* Logo hover effect */
    #nav-logo:hover {
      transform: scale(1.1) rotate(5deg);
    }
  </style>
</nav>
