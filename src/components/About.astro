---
import { t } from "../utils/translations";
import { calculateYearsOfExperience } from "../utils/dates";

export interface Props {
  lang: "es" | "en";
}

const { lang } = Astro.props;
const yearsOfExperience = calculateYearsOfExperience();
---

<section id="about" class="py-24 bg-white relative overflow-hidden">
  <!-- Enhanced background decoration -->
  <div class="absolute top-0 left-0 w-full">
    <!-- Main gradient line -->
    <div
      class="h-1 bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 animate-gradient-x">
    </div>
    <!-- Animated glow effect -->
    <div
      class="h-px bg-gradient-to-r from-transparent via-white to-transparent opacity-60 animate-pulse-gentle">
    </div>
    <!-- Subtle shadow -->
    <div class="h-2 bg-gradient-to-b from-blue-100/20 to-transparent"></div>
  </div>

  <!-- Floating decorative elements -->
  <div
    class="absolute top-4 left-1/4 w-2 h-2 bg-blue-400 rounded-full opacity-40 animate-float-slow">
  </div>
  <div
    class="absolute top-6 right-1/3 w-1.5 h-1.5 bg-purple-400 rounded-full opacity-30 animate-float-slow"
    style="animation-delay: 1s;">
  </div>
  <div
    class="absolute top-3 right-1/4 w-1 h-1 bg-pink-400 rounded-full opacity-50 animate-float-slow"
    style="animation-delay: 2s;">
  </div>

  <div class="max-w-7xl mx-auto px-4">
    <div class="text-center mb-16">
      <!-- Enhanced subtitle with better styling -->
      <div
        class="inline-flex items-center space-x-2 bg-gradient-to-r from-blue-50 to-purple-50 px-6 py-3 rounded-full border border-blue-100 mb-6 animate-fade-in-up">
        <svg
          class="w-5 h-5 text-blue-600"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24">
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"
          ></path>
        </svg>
        <span
          class="text-blue-700 font-semibold text-sm uppercase tracking-wider">
          {lang === "es" ? "Conóceme mejor" : "Get to know me"}
        </span>
        <div
          class="w-2 h-2 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full animate-pulse">
        </div>
      </div>

      <h2
        class="text-5xl font-bold mb-6 animate-fade-in-up"
        style="animation-delay: 0.2s;">
        <span class="gradient-text">{t("about.title", lang)}</span>
      </h2>

      <!-- Optional: Add a subtle description line -->
      <p
        class="text-gray-600 text-lg max-w-2xl mx-auto animate-fade-in-up"
        style="animation-delay: 0.4s;">
        {
          lang === "es"
            ? "Descubre mi trayectoria profesional y pasión por la tecnología"
            : "Discover my professional journey and passion for technology"
        }
      </p>
    </div>

    <!-- Main content in a balanced grid layout -->
    <div class="flex flex-col items-center justify-center">
      <!-- Text Content centrado -->
      <div class="w-full max-w-3xl space-y-10 animate-fade-in-left text-center">
        <div class="prose prose-lg max-w-none mx-auto">
          <p class="text-2xl text-gray-800 leading-relaxed mb-8 font-medium">
            {
              t("about.description", lang)
                .split(/\n|\./)
                .filter(Boolean)
                .map((line, idx) => (
                  <span style="display:block;margin-bottom:1.5em;line-height:1.7;letter-spacing:0.01em;">
                    {line.trim()}
                    {line.endsWith(".") ? "" : "."}
                  </span>
                ))
            }
          </p>
          <!-- Key highlights tags -->
          <div
            class="flex flex-wrap justify-center gap-4 mb-10 pt-2 border-t border-gray-200">
            <span
              class="inline-flex items-center space-x-2 bg-gradient-to-r from-green-50 to-blue-50 px-4 py-2 rounded-full border border-green-200 group hover:shadow-md transition-all">
              <div
                class="w-4 h-4 bg-gradient-to-r from-green-400 to-blue-500 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform">
                <div class="w-2 h-2 bg-white rounded-full"></div>
              </div>
              <span class="text-gray-700 font-medium text-sm"
                >{
                  lang === "es" ? "Liderazgo Técnico" : "Technical Leadership"
                }</span
              >
            </span>
            <span
              class="inline-flex items-center space-x-2 bg-gradient-to-r from-purple-50 to-pink-50 px-4 py-2 rounded-full border border-purple-200 group hover:shadow-md transition-all">
              <div
                class="w-4 h-4 bg-gradient-to-r from-purple-400 to-pink-500 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform">
                <div class="w-2 h-2 bg-white rounded-full"></div>
              </div>
              <span class="text-gray-700 font-medium text-sm">DevOps</span>
            </span>
            <span
              class="inline-flex items-center space-x-2 bg-gradient-to-r from-yellow-50 to-orange-50 px-4 py-2 rounded-full border border-yellow-200 group hover:shadow-md transition-all">
              <div
                class="w-4 h-4 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform">
                <div class="w-2 h-2 bg-white rounded-full"></div>
              </div>
              <span class="text-gray-700 font-medium text-sm">Full Stack</span>
            </span>
            <span
              class="inline-flex items-center space-x-2 bg-gradient-to-r from-blue-50 to-purple-50 px-4 py-2 rounded-full border border-blue-200 group hover:shadow-md transition-all">
              <div
                class="w-4 h-4 bg-gradient-to-r from-blue-400 to-purple-500 rounded-full flex items-center justify-center group-hover:scale-110 transition-transform">
                <div class="w-2 h-2 bg-white rounded-full"></div>
              </div>
              <span class="text-gray-700 font-medium text-sm"
                >{lang === "es" ? "Arquitectura" : "Architecture"}</span
              >
            </span>
          </div>
          <!-- Call to action -->
          <div class="pt-8">
            <a
              href="#contact"
              class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-lg hover:from-blue-700 hover:to-purple-700 transition-all transform hover:scale-105 shadow-lg hover:shadow-xl">
              <svg
                class="w-5 h-5 mr-2"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24">
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M8 12h.01M12 12h.01M16 12h.01M21 12c0 4.418-4.03 8-9 8a9.863 9.863 0 01-4.255-.949L3 20l1.395-3.72C3.512 15.042 3 13.574 3 12c0-4.418 4.03-8 9-8s9 3.582 9 8z"
                ></path>
              </svg>
              {lang === "es" ? "Conversemos" : "Let's Talk"}
            </a>
          </div>
        </div>
      </div>
    </div>

    <style>
      .gradient-text {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
      }

      @keyframes fadeInLeft {
        from {
          opacity: 0;
          transform: translateX(-30px);
        }
        to {
          opacity: 1;
          transform: translateX(0);
        }
      }

      @keyframes fadeInRight {
        from {
          opacity: 0;
          transform: translateX(30px);
        }
        to {
          opacity: 1;
          transform: translateX(0);
        }
      }

      @keyframes fadeInUp {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @keyframes bounceSlow {
        0%,
        20%,
        50%,
        80%,
        100% {
          transform: translateY(0);
        }
        40% {
          transform: translateY(-10px);
        }
        60% {
          transform: translateY(-5px);
        }
      }

      @keyframes pulseSlow {
        0%,
        100% {
          opacity: 1;
        }
        50% {
          opacity: 0.7;
        }
      }

      @keyframes gradientX {
        0%,
        100% {
          background-size: 200% 200%;
          background-position: left center;
        }
        50% {
          background-size: 200% 200%;
          background-position: right center;
        }
      }

      @keyframes pulseGentle {
        0%,
        100% {
          opacity: 0.6;
        }
        50% {
          opacity: 0.3;
        }
      }

      @keyframes floatSlow {
        0%,
        100% {
          transform: translateY(0px) rotate(0deg);
        }
        33% {
          transform: translateY(-10px) rotate(120deg);
        }
        66% {
          transform: translateY(5px) rotate(240deg);
        }
      }

      .animate-fade-in-left {
        animation: fadeInLeft 0.6s ease-out;
      }

      .animate-fade-in-right {
        animation: fadeInRight 0.6s ease-out 0.3s both;
      }

      .animate-fade-in-up {
        animation: fadeInUp 0.6s ease-out both;
      }

      .animate-bounce-slow {
        animation: bounceSlow 3s infinite;
      }

      .animate-pulse-slow {
        animation: pulseSlow 2s infinite;
      }

      .animate-gradient-x {
        animation: gradientX 6s ease infinite;
      }

      .animate-pulse-gentle {
        animation: pulseGentle 3s ease-in-out infinite;
      }

      .animate-float-slow {
        animation: floatSlow 6s ease-in-out infinite;
      }

      /* Intersection Observer animations */
      @media (prefers-reduced-motion: no-preference) {
        .animate-fade-in-left,
        .animate-fade-in-right,
        .animate-fade-in-up {
          opacity: 0;
        }
      }
    </style>

    <script>
      // Intersection Observer for animations
      document.addEventListener("DOMContentLoaded", () => {
        const observerOptions = {
          threshold: 0.1,
          rootMargin: "0px 0px -50px 0px",
        };

        const observer = new IntersectionObserver((entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              const element = entry.target as HTMLElement;
              element.style.opacity = "1";
              const animation = element.getAttribute("data-animation");
              if (animation) {
                element.style.animation = animation;
              }
            }
          });
        }, observerOptions);

        // Observe elements with animations
        const animatedElements = document.querySelectorAll(
          ".animate-fade-in-left, .animate-fade-in-right, .animate-fade-in-up"
        );
        animatedElements.forEach((el) => {
          const element = el as HTMLElement;
          if (element.classList.contains("animate-fade-in-left")) {
            element.setAttribute(
              "data-animation",
              "fadeInLeft 0.6s ease-out forwards"
            );
          } else if (element.classList.contains("animate-fade-in-right")) {
            element.setAttribute(
              "data-animation",
              "fadeInRight 0.6s ease-out 0.3s both"
            );
          } else if (element.classList.contains("animate-fade-in-up")) {
            const delay = element.style.animationDelay || "0s";
            element.setAttribute(
              "data-animation",
              `fadeInUp 0.6s ease-out ${delay} both`
            );
          }
          observer.observe(element);
        });
      });
    </script>
  </div>
</section>
