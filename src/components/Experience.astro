---
import { experienceDates, formatPeriod } from "../utils/dates";

export interface Props {
  lang: 'es' | 'en';
}

const { lang } = Astro.props;

// Iconos para cada tipo de experiencia
const experienceIcons = [
  'üë®‚Äçüíº', // L√≠der T√©cnico Lib√©lula
  '‚öôÔ∏è', // Backend Developer Lib√©lula  
  'üíº', // Freelance
  'üöÄ', // Technical Lead Edgebound
  'üíª', // Full Stack Edgebound
  'üîß', // Full Stack APS
  'üéì', // Instituto Tecnol√≥gico
  'üèõÔ∏è', // GAD Portoviejo
  'üèÜ'  // Club Social
];

const experiences = [
  {
    title: lang === 'es' ? 'L√≠der T√©cnico' : 'Technical Lead',
    company: 'Lib√©lula Soft',
    period: formatPeriod(experienceDates.libelulaStart, null, lang),
    description: lang === 'es' 
      ? 'Desarrollo sistemas empresariales con PHP (Yii2), dise√±o de APIs y optimizaci√≥n de procesos clave. Integro m√≥dulos frontend con React y Next.js. Automatizo flujos DevOps, pipelines CI/CD, revisi√≥n de c√≥digo y mentor√≠a de equipos.'
      : 'Developed enterprise systems using PHP (Yii2), API design, and optimization of key business processes. Integrated frontend modules using React and Next.js. Automated DevOps flows, CI/CD pipelines, code review, and team mentoring.'
  },
  {
    title: lang === 'es' ? 'Desarrollador Backend' : 'Back-end Developer',
    company: 'Lib√©lula Soft',
    period: formatPeriod(experienceDates.libelulaBackendStart, experienceDates.libelulaBackendEnd, lang),
    description: lang === 'es' 
      ? 'Desarroll√© soluciones backend especializadas con MongoDB, Yii2 y AWS. Enfoque en arquitectura escalable y optimizaci√≥n de bases de datos.'
      : 'Developed specialized backend solutions with MongoDB, Yii2 and AWS. Focus on scalable architecture and database optimization.'
  },
  {
    title: lang === 'es' ? 'Ingeniero de Software Freelance' : 'Freelance Software Engineer',
    company: 'Freelance',
    period: formatPeriod(experienceDates.freelanceStart, null, lang),
    description: lang === 'es' 
      ? 'Dise√±o y desarrollo soluciones de software confiables, escalables y personalizadas para empresas y emprendedores. Me enfoco en arquitectura limpia, c√≥digo eficiente y valor a largo plazo en cada proyecto.'
      : 'I design and develop reliable, scalable, and customized software solutions for businesses and entrepreneurs. I focus on clean architecture, efficient code, and long-term value in every project I work on.'
  },
  {
    title: lang === 'es' ? 'L√≠der T√©cnico' : 'Technical Lead',
    company: 'Edgebound',
    period: formatPeriod(experienceDates.edgeboundTechLeadStart, experienceDates.edgeboundTechLeadEnd, lang),
    description: lang === 'es' 
      ? 'Lider√© proyecto a nivel t√©cnico para mejorar rendimiento y experiencia de desarrollo, realizando migraci√≥n de CRA a Next.js e implementando flujos de trabajo para revisi√≥n de errores y despliegue.'
      : 'Worked leading a project at a technical level to improve performance and development experience, performing a migration from CRA to Next.js and implementing workflows for proper bug checking and deployment.'
  },
  {
    title: lang === 'es' ? 'Desarrollador Full Stack' : 'Full Stack Developer',
    company: 'Edgebound',
    period: formatPeriod(experienceDates.edgeboundFullStackStart, experienceDates.edgeboundFullStackEnd, lang),
    description: lang === 'es' 
      ? 'Dise√±√© e implement√© nuevas funcionalidades y mejoras de calidad de c√≥digo para aplicaciones en arquitectura de microservicios comunic√°ndose con RabbitMQ, con HCL Commerce como n√∫cleo.'
      : 'I designed and implemented new functionalities and code quality improvements for several applications of a large project deployed in a microservices architecture communicating with RabbitMQ with HCL Commerce as core.'
  },
  {
    title: lang === 'es' ? 'Desarrollador Full Stack' : 'Full Stack Developer',
    company: 'APS',
    period: formatPeriod(experienceDates.apsStart, experienceDates.apsEnd, lang),
    description: lang === 'es' 
      ? 'Implement√© mejoras, nuevas funcionalidades y proyectos desde cero en backend y frontend de aplicaciones de la empresa con VueJS, NextJS y Ruby on Rails.'
      : 'I implemented improvements, new functionalities and projects from scratch in the backend and frontend of some of the company\'s applications with VueJS, NextJS and Ruby on Rails.'
  },
  {
    title: lang === 'es' ? 'Desarrollador Full Stack' : 'Full Stack Developer',
    company: lang === 'es' ? 'Instituto Superior Tecnol√≥gico Portoviejo' : 'Portoviejo Technical Institute',
    period: formatPeriod(experienceDates.portoviejoInstStart, experienceDates.portoviejoInstEnd, lang),
    description: lang === 'es' 
      ? 'Desarroll√© sistema para gestionar procesos de instituci√≥n acad√©mica: Admisi√≥n, Matriculaci√≥n, Pagos de Matr√≠culas y Pensiones, Facturaci√≥n Electr√≥nica, Gesti√≥n de Cursos y Horarios, Asistencia y Calificaciones. Desarrollado con Laravel (Backend) y Angular (Frontend), integrando API de Datil para Facturaci√≥n Electr√≥nica.'
      : 'I developed a system to manage processes of an academic institution such as Admission, Enrollment, Tuition and Deferred Fees Payments, Electronic Invoicing, Course and Schedule Management, Attendance, and Grades. The system was developed in Laravel in the Backend and Angular in the Frontend, in addition to the integration with Datil API for Electronic Invoicing.'
  },
  {
    title: lang === 'es' ? 'Desarrollador Full Stack' : 'Full Stack Developer',
    company: 'GAD Portoviejo',
    period: formatPeriod(experienceDates.portoviejoGadStart, experienceDates.portoviejoGadEnd, lang),
    description: lang === 'es' 
      ? 'Como tesis de grado, desarroll√© sistema para gesti√≥n de veh√≠culos recolectores, ubicaci√≥n en tiempo real y notificaciones para mejorar el sistema de recolecci√≥n de residuos. Desarrollado con Laravel y NodeJS (backend), Angular e Ionic (frontend), integrando Google Maps API, Firebase Cloud Messaging y Twilio API.'
      : 'As a graduate thesis, I developed a system for the management of collection vehicles, real-time location, and user notifications to improve the waste collection system of a municipality in Manab√≠ - Ecuador. The system was developed with Laravel and NodeJS in the backend and with Angular and Ionic in the front, in addition to integrations with Google Maps API, Firebase Cloud Messaging, and Twilio API.'
  },
  {
    title: lang === 'es' ? 'Desarrollador Full Stack' : 'Full Stack Developer',
    company: 'Club Social Mej√≠a',
    period: formatPeriod(experienceDates.clubSocialStart, experienceDates.clubSocialEnd, lang),
    description: lang === 'es' 
      ? 'Desarroll√© aplicaci√≥n web para gestionar procesos de Inscripci√≥n de Socios, Gesti√≥n de Pagos Mensuales, Asistencia a Reuniones, Cobranzas y Multas para 700+ miembros de un Club Social. Desarrollado con Laravel (Backend) y Angular (Frontend).'
      : 'I developed a web application to manage the processes of Membership Enrollment, Monthly Payment Management, Meeting Attendance, Collections, and Fines for the 700+ members of a Social Club in the parish of Mej√≠a - Portoviejo. The system was developed with Laravel in the Backend and Angular in the Frontend.'
  }
];
---

<section id="experience" class="py-24 bg-gradient-to-br from-gray-50 to-blue-50 relative overflow-hidden">
  <!-- Part√≠culas de fondo animadas -->
  <div class="absolute inset-0 overflow-hidden pointer-events-none">
    <div class="floating-particles"></div>
  </div>
  
  <div class="max-w-4xl mx-auto px-4 relative z-10">
    <div class="text-center mb-16 animate-fade-in">
      <span class="text-blue-600 font-semibold text-sm uppercase tracking-wider animate-bounce-subtle">
        {lang === 'es' ? 'Mi trayectoria' : 'My journey'}
      </span>
      <h2 class="text-5xl font-bold mt-4 mb-6">
        <span class="text-gray-900">{lang === 'es' ? 'Experiencia' : 'Experience'}</span>
        <span class="gradient-text animate-gradient"> {lang === 'es' ? 'Profesional' : 'Professional'}</span>
      </h2>
    </div>
    
    <div class="relative">
      <!-- Timeline line animada -->
      <div class="timeline-line absolute left-6 top-0 bottom-0 w-0.5 bg-gradient-to-b from-blue-600 via-purple-600 to-pink-600"></div>
      
      <div class="space-y-8">
        {experiences.map((exp, index) => (
          <div class={`experience-item relative flex items-start opacity-0 transform translate-y-8`} data-index={index}>
            <!-- Timeline dot mejorado -->
            <div class="timeline-dot relative z-10 flex items-center justify-center w-12 h-12 bg-white border-4 border-blue-600 rounded-full shadow-lg transition-all duration-500 hover:scale-110 hover:shadow-xl group">
              <div class="absolute inset-0 bg-gradient-to-r from-blue-600 to-purple-600 rounded-full opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
              <span class="text-lg relative z-10 transition-transform duration-300 group-hover:scale-110">
                {experienceIcons[index]}
              </span>
            </div>
            
            <!-- Content card mejorada -->
            <div class="ml-8 flex-1">
              <div class="experience-card bg-white rounded-xl p-6 shadow-lg hover:shadow-2xl transition-all duration-500 border border-gray-100 transform hover:-translate-y-2 hover:scale-[1.02] group">
                <!-- Efecto de brillo en hover -->
                <div class="absolute inset-0 bg-gradient-to-r from-blue-400/0 via-purple-400/5 to-pink-400/0 rounded-xl opacity-0 group-hover:opacity-100 transition-opacity duration-500"></div>
                
                <!-- Header -->
                <div class="flex flex-col md:flex-row md:items-center md:justify-between mb-4 relative z-10">
                  <div>
                    <h3 class="text-lg font-bold text-gray-900 mb-1 group-hover:text-blue-600 transition-colors duration-300">{exp.title}</h3>
                    <p class="text-blue-600 font-medium group-hover:text-purple-600 transition-colors duration-300">{exp.company}</p>
                  </div>
                  <div class="text-sm text-gray-500 font-medium mt-2 md:mt-0 px-3 py-1 bg-gray-100 rounded-full group-hover:bg-blue-100 group-hover:text-blue-700 transition-all duration-300">
                    {exp.period}
                  </div>
                </div>
                
                <!-- Description -->
                <p class="text-gray-700 leading-relaxed relative z-10 group-hover:text-gray-800 transition-colors duration-300">{exp.description}</p>
                
                <!-- Tech stack mejorado -->
                <div class="flex flex-wrap gap-2 mt-4 relative z-10">
                  {index === 0 && (
                    <>
                      <span class="tech-tag bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-blue-200 hover:scale-105 transition-all duration-200 cursor-default">PHP</span>
                      <span class="tech-tag bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-purple-200 hover:scale-105 transition-all duration-200 cursor-default">Yii2</span>
                      <span class="tech-tag bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-green-200 hover:scale-105 transition-all duration-200 cursor-default">DevOps</span>
                    </>
                  )}
                  {index === 1 && (
                    <>
                      <span class="tech-tag bg-indigo-100 text-indigo-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-indigo-200 hover:scale-105 transition-all duration-200 cursor-default">MongoDB</span>
                      <span class="tech-tag bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-blue-200 hover:scale-105 transition-all duration-200 cursor-default">Yii2</span>
                      <span class="tech-tag bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-orange-200 hover:scale-105 transition-all duration-200 cursor-default">AWS</span>
                    </>
                  )}
                  {index === 2 && (
                    <>
                      <span class="tech-tag bg-cyan-100 text-cyan-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-cyan-200 hover:scale-105 transition-all duration-200 cursor-default">Full Stack</span>
                      <span class="tech-tag bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-purple-200 hover:scale-105 transition-all duration-200 cursor-default">Arquitectura</span>
                      <span class="tech-tag bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-green-200 hover:scale-105 transition-all duration-200 cursor-default">Consultor√≠a</span>
                    </>
                  )}
                  {index === 3 && (
                    <>
                      <span class="tech-tag bg-cyan-100 text-cyan-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-cyan-200 hover:scale-105 transition-all duration-200 cursor-default">Next.js</span>
                      <span class="tech-tag bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-blue-200 hover:scale-105 transition-all duration-200 cursor-default">Performance</span>
                      <span class="tech-tag bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-green-200 hover:scale-105 transition-all duration-200 cursor-default">Migration</span>
                    </>
                  )}
                  {index === 4 && (
                    <>
                      <span class="tech-tag bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-orange-200 hover:scale-105 transition-all duration-200 cursor-default">RabbitMQ</span>
                      <span class="tech-tag bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-purple-200 hover:scale-105 transition-all duration-200 cursor-default">HCL Commerce</span>
                      <span class="tech-tag bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-blue-200 hover:scale-105 transition-all duration-200 cursor-default">Microservices</span>
                    </>
                  )}
                  {index === 5 && (
                    <>
                      <span class="tech-tag bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-green-200 hover:scale-105 transition-all duration-200 cursor-default">Vue.js</span>
                      <span class="tech-tag bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-blue-200 hover:scale-105 transition-all duration-200 cursor-default">Next.js</span>
                      <span class="tech-tag bg-red-100 text-red-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-red-200 hover:scale-105 transition-all duration-200 cursor-default">Ruby on Rails</span>
                    </>
                  )}
                  {index === 6 && (
                    <>
                      <span class="tech-tag bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-orange-200 hover:scale-105 transition-all duration-200 cursor-default">Laravel</span>
                      <span class="tech-tag bg-red-100 text-red-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-red-200 hover:scale-105 transition-all duration-200 cursor-default">Angular</span>
                      <span class="tech-tag bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-blue-200 hover:scale-105 transition-all duration-200 cursor-default">API Datil</span>
                    </>
                  )}
                  {index === 7 && (
                    <>
                      <span class="tech-tag bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-green-200 hover:scale-105 transition-all duration-200 cursor-default">Node.js</span>
                      <span class="tech-tag bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-orange-200 hover:scale-105 transition-all duration-200 cursor-default">Laravel</span>
                      <span class="tech-tag bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-blue-200 hover:scale-105 transition-all duration-200 cursor-default">Google Maps</span>
                      <span class="tech-tag bg-purple-100 text-purple-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-purple-200 hover:scale-105 transition-all duration-200 cursor-default">IoT</span>
                    </>
                  )}
                  {index === 8 && (
                    <>
                      <span class="tech-tag bg-orange-100 text-orange-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-orange-200 hover:scale-105 transition-all duration-200 cursor-default">Laravel</span>
                      <span class="tech-tag bg-red-100 text-red-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-red-200 hover:scale-105 transition-all duration-200 cursor-default">Angular</span>
                      <span class="tech-tag bg-green-100 text-green-800 px-3 py-1 rounded-full text-xs font-medium hover:bg-green-200 hover:scale-105 transition-all duration-200 cursor-default">Gesti√≥n</span>
                    </>
                  )}
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</section>

<style>
  /* Animaciones base */
  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes drawLine {
    from {
      height: 0;
    }
    to {
      height: 100%;
    }
  }

  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }

  @keyframes bounceSubtle {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-3px);
    }
  }

  @keyframes gradientShift {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  @keyframes particle-float {
    0%, 100% {
      transform: translateY(0px) translateX(0px) rotate(0deg);
    }
    33% {
      transform: translateY(-20px) translateX(10px) rotate(120deg);
    }
    66% {
      transform: translateY(-10px) translateX(-10px) rotate(240deg);
    }
  }

  /* Clases de animaci√≥n */
  .animate-fade-in {
    animation: fadeInUp 0.8s ease-out;
  }

  .animate-bounce-subtle {
    animation: bounceSubtle 2s ease-in-out infinite;
  }

  .animate-gradient {
    background: linear-gradient(-45deg, #3b82f6, #8b5cf6, #ec4899, #3b82f6);
    background-size: 400% 400%;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradientShift 4s ease-in-out infinite;
  }

  /* Timeline animada */
  .timeline-line {
    transform-origin: top;
    animation: drawLine 2s ease-out 0.5s both;
  }

  /* Items de experiencia */
  .experience-item {
    transition: all 0.45s cubic-bezier(0.4, 0, 0.2, 1); /* Punto medio: 0.45s */
  }

  .experience-item.animate-in {
    opacity: 1;
    transform: translateY(0);
  }

  /* Dot del timeline */
  .timeline-dot {
    position: relative;
    overflow: hidden;
  }

  .timeline-dot::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    background: radial-gradient(circle, rgba(59, 130, 246, 0.3) 0%, transparent 70%);
    border-radius: 50%;
    transform: translate(-50%, -50%);
    transition: all 0.6s ease;
  }

  .timeline-dot:hover::before {
    width: 60px;
    height: 60px;
  }

  /* Cards de experiencia */
  .experience-card {
    position: relative;
    overflow: hidden;
    backdrop-filter: blur(10px);
  }

  .experience-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.4), transparent);
    transition: left 0.6s ease;
  }

  .experience-card:hover::before {
    left: 100%;
  }

  /* Tech tags */
  .tech-tag {
    position: relative;
    overflow: hidden;
  }

  .tech-tag::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.5), transparent);
    transition: left 0.3s ease;
  }

  .tech-tag:hover::before {
    left: 100%;
  }

  /* Part√≠culas flotantes */
  .floating-particles {
    position: relative;
    width: 100%;
    height: 100%;
  }

  .floating-particles::before,
  .floating-particles::after {
    content: '';
    position: absolute;
    width: 20px;
    height: 20px;
    background: linear-gradient(45deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1));
    border-radius: 50%;
    animation: particle-float 6s ease-in-out infinite;
  }

  .floating-particles::before {
    top: 20%;
    left: 10%;
    animation-delay: 0s;
  }

  .floating-particles::after {
    top: 60%;
    right: 15%;
    animation-delay: 3s;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .timeline-line {
      left: 1.5rem;
    }
    
    .experience-item {
      margin-left: 1rem;
    }
  }
</style>

<script>
  // Intersection Observer para animaciones al hacer scroll
  const observerOptions = {
    threshold: 0.12,
    rootMargin: '0px 0px -30px 0px'
  };

  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        const item = entry.target as HTMLElement;
        const index = parseInt(item.dataset.index || '0');
        
        // Delay balanceado para efecto escalonado suave
        setTimeout(() => {
          item.classList.add('animate-in');
        }, index * 100); // Punto medio: 100ms
        
        observer.unobserve(item);
      }
    });
  }, observerOptions);

  // Observar todos los items de experiencia
  document.addEventListener('DOMContentLoaded', () => {
    const experienceItems = document.querySelectorAll('.experience-item');
    
    // Detectar si el usuario prefiere movimiento reducido
    const prefersReducedMotion = window.matchMedia('(prefers-reduced-motion: reduce)').matches;
    
    if (prefersReducedMotion) {
      // Si prefiere movimiento reducido, mostrar todo inmediatamente
      experienceItems.forEach(item => {
        (item as HTMLElement).classList.add('animate-in');
      });
    } else {
      // Comportamiento normal con animaciones
      experienceItems.forEach(item => {
        observer.observe(item);
      });
    }
  });

  // Efecto de paralaje optimizado con throttling
  let ticking = false;
  let lastScrollY = 0;

  function updateParticles() {
    const scrolled = window.pageYOffset;
    
    // Solo actualizar si el scroll cambi√≥ significativamente
    if (Math.abs(scrolled - lastScrollY) > 5) {
      const parallax = document.querySelector('.floating-particles') as HTMLElement;
      
      if (parallax) {
        const speed = scrolled * 0.1; // Reducido de 0.2 a 0.1 para menos movimiento
        parallax.style.transform = `translateY(${speed}px)`;
      }
      
      lastScrollY = scrolled;
    }
    
    ticking = false;
  }

  function requestTick() {
    if (!ticking) {
      requestAnimationFrame(updateParticles);
      ticking = true;
    }
  }

  // Usar throttling para el scroll
  window.addEventListener('scroll', requestTick, { passive: true });

  // A√±adir m√°s part√≠culas din√°micas con l√≠mite
  function createFloatingParticle() {
    const container = document.querySelector('.floating-particles');
    if (!container) return;
    
    // Limitar el n√∫mero de part√≠culas para mejor rendimiento
    const existingParticles = container.children.length;
    if (existingParticles > 8) return;
    
    const particle = document.createElement('div');
    particle.style.position = 'absolute';
    particle.style.width = Math.random() * 8 + 4 + 'px'; // Reducido el tama√±o
    particle.style.height = particle.style.width;
    particle.style.background = `linear-gradient(45deg, 
      rgba(59, 130, 246, ${Math.random() * 0.2}), 
      rgba(139, 92, 246, ${Math.random() * 0.2}))`;
    particle.style.borderRadius = '50%';
    particle.style.top = Math.random() * 100 + '%';
    particle.style.left = Math.random() * 100 + '%';
    particle.style.animation = `particle-float ${Math.random() * 3 + 3}s ease-in-out infinite`; // Reducido el tiempo
    particle.style.animationDelay = Math.random() * 1 + 's';
    particle.style.pointerEvents = 'none'; // Evitar interferir con clics
    
    container.appendChild(particle);
    
    // Remover la part√≠cula despu√©s de un tiempo m√°s corto
    setTimeout(() => {
      if (particle.parentNode) {
        particle.parentNode.removeChild(particle);
      }
    }, 8000); // Reducido de 10000ms a 8000ms
  }

  // Crear part√≠culas con frecuencia balanceada
  setInterval(createFloatingParticle, 4000); // Punto medio: 4000ms
</script>